diff --git a/security/apparmor/lsm.c b/security/apparmor/lsm.c
index 9a65eeaf7..84a58c955 100644
--- a/security/apparmor/lsm.c
+++ b/security/apparmor/lsm.c
@@ -601,7 +601,7 @@ static int apparmor_getprocattr(struct task_struct *task, char *name,
 static int apparmor_setprocattr(const char *name, void *value,
 				size_t size)
 {
-	char *command, *largs = NULL, *args = value;
+	char *command, *args = value;
 	size_t arg_size;
 	int error;
 	DEFINE_AUDIT_DATA(sa, LSM_AUDIT_DATA_NONE, OP_SETPROCATTR);
@@ -609,26 +609,25 @@ static int apparmor_setprocattr(const char *name, void *value,
 	if (size == 0)
 		return -EINVAL;
 
-	/* AppArmor requires that the buffer must be null terminated atm */
+	/* args points to a PAGE_SIZE buffer, AppArmor requires that
+	 * the buffer must be null terminated or have size <= PAGE_SIZE -1
+	 * so that AppArmor can null terminate them
+	 */
 	if (args[size - 1] != '\0') {
-		/* null terminate */
-		largs = args = kmalloc(size + 1, GFP_KERNEL);
-		if (!args)
-			return -ENOMEM;
-		memcpy(args, value, size);
+		if (size == PAGE_SIZE)
+			return -EINVAL;
 		args[size] = '\0';
 	}
 
-	error = -EINVAL;
 	args = strim(args);
 	command = strsep(&args, " ");
 	if (!args)
-		goto out;
+		return -EINVAL;
 	args = skip_spaces(args);
 	if (!*args)
-		goto out;
+		return -EINVAL;
 
-	arg_size = size - (args - (largs ? largs : (char *) value));
+	arg_size = size - (args - (char *) value);
 	if (strcmp(name, "current") == 0) {
 		if (strcmp(command, "changehat") == 0) {
 			error = aa_setprocattr_changehat(args, arg_size,
@@ -654,21 +653,19 @@ static int apparmor_setprocattr(const char *name, void *value,
 			goto fail;
 	} else
 		/* only support the "current" and "exec" process attributes */
-		goto fail;
+		return -EINVAL;
 
 	if (!error)
 		error = size;
-out:
-	kfree(largs);
 	return error;
 
 fail:
 	aad(&sa)->label = begin_current_label_crit_section();
 	aad(&sa)->info = name;
-	aad(&sa)->error = error = -EINVAL;
+	aad(&sa)->error = -EINVAL;
 	aa_audit_msg(AUDIT_APPARMOR_DENIED, &sa, NULL);
 	end_current_label_crit_section(aad(&sa)->label);
-	goto out;
+	return -EINVAL;
 }
 
 /**
